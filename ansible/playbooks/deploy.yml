---
- name: Deploy
  hosts: server
  vars:
    app_dir: /home/ubuntu/app
    deployments_dir: /home/ubuntu/deployments
    deployment_dir: /home/ubuntu/deployments/{{ ansible_date_time.iso8601_basic_short }}
  tasks:
    - name: "Create directories"
      file:
        path: "{{ item }}"
        state: directory
      loop:
        - "{{ app_dir }}"
        - "{{ deployments_dir }}"
        - "{{ deployment_dir }}"
        - "{{ deployment_dir }}/config"
    - name: Fetch config
      environment:
        TAG: "{{ tag }}"
      shell:
        cmd: imgpkg pull -b jbrunton/infra-test_config:$TAG -o {{ deployment_dir }}/config
    - name: Generate compose file
      environment:
        API_ADDRESS: "https://{{ stack_name }}.infra-test.jbrunton-aws.com/api"
        DOMAIN: "{{ stack_name }}.infra-test.jbrunton-aws.com"
      shell:
        chdir: "{{ deployment_dir }}/config"
        cmd: "docker-compose config | kbld --images-annotation=false -f - -f ./.imgpkg/images.yml > {{ deployment_dir }}/docker-compose.yml"
    - name: Pull latest images
      command:
        chdir: "{{ deployment_dir }}"
        cmd: docker-compose pull
    - name: Check if compose file exists
      stat:
        path: "{{ app_dir }}/docker-compose.yml"
      register: compose_file_result
    - name: Stop services
      command:
        chdir: "{{ app_dir }}"
        cmd: docker-compose down
      when: compose_file_result.stat.exists
    - name: Remove previous symlink
      command: rm {{ app_dir }}/docker-compose.yml
      when: compose_file_result.stat.exists
    - name: Link to new compose file
      command: ln -s {{ deployment_dir }}/docker-compose.yml {{ app_dir }}/docker-compose.yml
    - name: Start services
      command:
        chdir: "{{ app_dir }}"
        cmd: docker-compose up --no-build -d
    - name: Run migrations
      command:
        chdir: "{{ app_dir }}"
        cmd: docker-compose exec api npx knex migrate:latest
