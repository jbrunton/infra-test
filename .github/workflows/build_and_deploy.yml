name: build_and_deploy
on:
  push:
    branches:
      - develop

  workflow_dispatch:
    inputs:
      stack_name:
        description: Stack to deploy to
        required: true

env:
  stack_name: ${{ github.event.inputs.stack_name && github.event.inputs.stack_name || 'dev' }}

jobs:

  # workaround for https://github.community/t/how-to-set-and-access-a-workflow-variable/17335/11
  config:
    runs-on: ubuntu-latest
    outputs:
      stack_name: ${{ steps.set_outputs.outputs.stack_name }}
    steps:
      - id: set_outputs
        run: echo "::set-output stack_name=${stack_name}"
        
  build:
    runs-on: ubuntu-latest
    needs: [config]
    env:
      COMPOSE_FILE: docker-compose.yml
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      API_ADDRESS: http://test-droplet-${{ needs.config.outputs.stack_name }}.infra-test.jbrunton-aws.com/api
      TAG: ${{ needs.config.outputs.stack_name }}
    steps:
      - uses: actions/checkout@v2
      - name: Docker Login
        run: echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
      - name: Docker Build
        run: docker compose build
      - name: Docker Push
        run: docker compose push

  provision:
    runs-on: ubuntu-latest
    needs: [config]
    steps:
      - uses: actions/checkout@v2
      - run: npm install
        working-directory: ./pulumi
      - uses: pulumi/actions@v3
        with:
          command: up
          stack-name: ${stack_name}
          work-dir: pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DIGITALOCEAN_TOKEN: ${{ secrets.DIGITALOCEAN_TOKEN }}

  deploy:
    runs-on: ubuntu-latest
    needs: [config, build, provision]
    defaults:
      run:
        working-directory: ./ansible
    steps:
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: actions/checkout@v2
      - name: Run deploy playbook
        run: ansible-playbook playbooks/deploy.yml -i hosts.yml --extra-vars "stack_name=${stack_name}"
